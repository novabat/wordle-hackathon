{"ast":null,"code":"var _jsxFileName = \"/Users/adityaravishankar/Documents/hackathon/Wordle/src/components/keyboard/keyboard.tsx\";\nimport { CAMEL_LETTERS } from \"../../global/global\";\nimport Key from \"../key/key\";\nimport \"./keyboard.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst KeyBoard = props => {\n  const {\n    selectedLetters,\n    pressVirualKeyBoard,\n    pressEnter,\n    pressBackspace\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"keyboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: CAMEL_LETTERS.slice(0, 10).map(key => {\n        const letter = selectedLetters.find(item => item.letter === key.toLowerCase());\n        return /*#__PURE__*/_jsxDEV(Key, {\n          name: key,\n          state: letter ? letter.state : \"\",\n          pressVirualKeyBoard: pressVirualKeyBoard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: CAMEL_LETTERS.slice(10, 19).map(key => {\n        const letter = selectedLetters.find(item => item.letter === key.toLowerCase());\n        return /*#__PURE__*/_jsxDEV(Key, {\n          name: key,\n          state: letter ? letter.state : \"\",\n          pressVirualKeyBoard: pressVirualKeyBoard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: CAMEL_LETTERS.slice(19, 29).map(key => {\n        const letter = selectedLetters.find(item => item.letter === key.toLowerCase());\n        return /*#__PURE__*/_jsxDEV(Key, {\n          name: key,\n          state: letter ? letter.state : \"\",\n          pressVirualKeyBoard: pressVirualKeyBoard,\n          pressEnter: pressEnter,\n          pressBackspace: pressBackspace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = KeyBoard;\nexport default KeyBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"KeyBoard\");","map":{"version":3,"sources":["/Users/adityaravishankar/Documents/hackathon/Wordle/src/components/keyboard/keyboard.tsx"],"names":["CAMEL_LETTERS","Key","KeyBoard","props","selectedLetters","pressVirualKeyBoard","pressEnter","pressBackspace","slice","map","key","letter","find","item","toLowerCase","state"],"mappings":";AACA,SAASA,aAAT,QAA8B,qBAA9B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,iBAAP;;;AAEA,MAAMC,QAAuB,GAAIC,KAAD,IAAsB;AACpD,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,mBAAnB;AAAwCC,IAAAA,UAAxC;AAAoDC,IAAAA;AAApD,MACJJ,KADF;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGH,aAAa,CAACQ,KAAd,CAAoB,CAApB,EAAuB,EAAvB,EAA2BC,GAA3B,CAAgCC,GAAD,IAAiB;AAC/C,cAAMC,MAAM,GAAGP,eAAe,CAACQ,IAAhB,CAAsBC,IAAD,IAA2BA,IAAI,CAACF,MAAL,KAAgBD,GAAG,CAACI,WAAJ,EAAhE,CAAf;AACA,4BACE,QAAC,GAAD;AACE,UAAA,IAAI,EAAEJ,GADR;AAEE,UAAA,KAAK,EAAEC,MAAM,GAAGA,MAAM,CAACI,KAAV,GAAkB,EAFjC;AAGE,UAAA,mBAAmB,EAAEV;AAHvB;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGL,aAAa,CAACQ,KAAd,CAAoB,EAApB,EAAwB,EAAxB,EAA4BC,GAA5B,CAAiCC,GAAD,IAAiB;AAChD,cAAMC,MAAM,GAAGP,eAAe,CAACQ,IAAhB,CAAsBC,IAAD,IAA2BA,IAAI,CAACF,MAAL,KAAgBD,GAAG,CAACI,WAAJ,EAAhE,CAAf;AACA,4BACE,QAAC,GAAD;AACE,UAAA,IAAI,EAAEJ,GADR;AAEE,UAAA,KAAK,EAAEC,MAAM,GAAGA,MAAM,CAACI,KAAV,GAAkB,EAFjC;AAGE,UAAA,mBAAmB,EAAEV;AAHvB;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAbF,eAyBE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGL,aAAa,CAACQ,KAAd,CAAoB,EAApB,EAAwB,EAAxB,EAA4BC,GAA5B,CAAiCC,GAAD,IAAiB;AACjD,cAAMC,MAAM,GAAGP,eAAe,CAACQ,IAAhB,CAAsBC,IAAD,IAA2BA,IAAI,CAACF,MAAL,KAAgBD,GAAG,CAACI,WAAJ,EAAhE,CAAf;AACC,4BACE,QAAC,GAAD;AACE,UAAA,IAAI,EAAEJ,GADR;AAEE,UAAA,KAAK,EAAEC,MAAM,GAAGA,MAAM,CAACI,KAAV,GAAkB,EAFjC;AAGE,UAAA,mBAAmB,EAAEV,mBAHvB;AAIE,UAAA,UAAU,EAAEC,UAJd;AAKE,UAAA,cAAc,EAAEC;AALlB;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAXA;AADH;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CA7CD;;KAAML,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import { FC } from \"react\";\nimport { CAMEL_LETTERS } from \"../../global/global\";\nimport Key from \"../key/key\";\nimport { IKeyboard, ISelectedLetter } from \"./keyboard-interface\";\nimport \"./keyboard.scss\";\n\nconst KeyBoard: FC<IKeyboard> = (props: IKeyboard) => {\n  const { selectedLetters, pressVirualKeyBoard, pressEnter, pressBackspace } =\n    props;\n  return (\n    <div id=\"keyboard\">\n      <div className=\"row\">\n        {CAMEL_LETTERS.slice(0, 10).map((key: string) => {\n          const letter = selectedLetters.find((item: ISelectedLetter) => item.letter === key.toLowerCase());\n          return (\n            <Key\n              name={key}\n              state={letter ? letter.state : \"\"}\n              pressVirualKeyBoard={pressVirualKeyBoard}\n            />\n          );\n        })}\n      </div>\n      <div className=\"row\">\n        {CAMEL_LETTERS.slice(10, 19).map((key: string) => {\n          const letter = selectedLetters.find((item: ISelectedLetter) => item.letter === key.toLowerCase());\n          return (\n            <Key\n              name={key}\n              state={letter ? letter.state : \"\"}\n              pressVirualKeyBoard={pressVirualKeyBoard}\n            />\n          );\n        })}\n      </div>\n      <div className=\"row\">\n        {CAMEL_LETTERS.slice(19, 29).map((key: string) => {\n         const letter = selectedLetters.find((item: ISelectedLetter) => item.letter === key.toLowerCase() );\n          return (\n            <Key\n              name={key}\n              state={letter ? letter.state : \"\"}\n              pressVirualKeyBoard={pressVirualKeyBoard}\n              pressEnter={pressEnter}\n              pressBackspace={pressBackspace}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default KeyBoard;\n"]},"metadata":{},"sourceType":"module"}